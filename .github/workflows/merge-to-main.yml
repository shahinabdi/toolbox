name: Auto Merge to Main with Tag

on:
  push:
    branches:
      - dev

jobs:
  merge-to-main:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh

      - name: Get last tag
        id: get_tag
        run: |
          git fetch --tags
          LAST_TAG=$(git tag --list '0.*.*' --sort=-v:refname | head -n 1)
          if [ -z "$LAST_TAG" ]; then
            LAST_TAG="0.000.00"
          fi
          echo "last_tag=$LAST_TAG"
          echo "last_tag=$LAST_TAG" >> "$GITHUB_OUTPUT"

      - name: Calculate next tag
        id: next_tag
        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            CURRENT="${{ steps.get_tag.outputs.last_tag }}"
            CUR_MAJOR=$(echo "$CURRENT" | cut -d. -f2)
            CUR_MINOR=$(echo "$CURRENT" | cut -d. -f3)

            echo "Current tag: $CURRENT"
            echo "Major: $CUR_MAJOR | Minor: $CUR_MINOR"

            # Try to get labels from last merged PR into dev
            LABELS=$(gh pr list -s merged -B dev --json labels -q '.[0].labels[].name' 2>/dev/null || echo "")

            if [ -z "$LABELS" ]; then
            echo "⚠️  No PR labels found. Falling back to commit message detection..."
            COMMIT_MSG=$(git log -1 --pretty=%B)
            echo "Commit message: $COMMIT_MSG"

            if echo "$COMMIT_MSG" | grep -iE '^feat:|^feature:'; then
                LABELS="feature"
            elif echo "$COMMIT_MSG" | grep -iE '^fix:|^bug:|^patch:'; then
                LABELS="bug"
            else
                echo "❌ Unable to determine change type from commit or PR. Aborting."
                exit 1
            fi
            fi

            echo "Detected labels: $LABELS"

            if echo "$LABELS" | grep -q "feature"; then
            NEW_MAJOR=$((10#$CUR_MAJOR + 1))
            NEW_TAG="0.${NEW_MAJOR}.00"
            elif echo "$LABELS" | grep -q -E "bug|patch"; then
            NEW_MINOR=$((10#$CUR_MINOR + 1))
            NEW_TAG="0.${CUR_MAJOR}.${NEW_MINOR}"
            else
            echo "❌ No recognized label found (feature or bug/patch)."
            exit 1
            fi

            echo "✅ New tag will be: $NEW_TAG"
            echo "new_tag=$NEW_TAG" >> "$GITHUB_OUTPUT"

      - name: Create and push tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git checkout dev
          git pull origin dev
          git tag ${{ steps.next_tag.outputs.new_tag }}
          git push origin ${{ steps.next_tag.outputs.new_tag }}

      - name: Merge dev into main
        run: |
          git checkout main
          git pull origin main
          git merge dev --no-ff -m "Merge dev into main: ${{ steps.next_tag.outputs.new_tag }}"
          git push origin main
